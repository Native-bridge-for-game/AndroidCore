// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: NativePubSub.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.pj.pubsub.proto;

@kotlin.jvm.JvmName("-initializemessage")
public inline fun message(block: com.pj.pubsub.proto.MessageKt.Dsl.() -> kotlin.Unit): com.pj.pubsub.proto.NativePubSub.Message =
  com.pj.pubsub.proto.MessageKt.Dsl._create(com.pj.pubsub.proto.NativePubSub.Message.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `Message`
 */
public object MessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.pj.pubsub.proto.NativePubSub.Message.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.pj.pubsub.proto.NativePubSub.Message.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.pj.pubsub.proto.NativePubSub.Message = _builder.build()

    /**
     * `string key = 1;`
     */
    public var key: kotlin.String
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * `string key = 1;`
     */
    public fun clearKey() {
      _builder.clearKey()
    }

    /**
     * `.Container container = 2;`
     */
    public var container: com.pj.pubsub.proto.NativePubSub.Container
      @JvmName("getContainer")
      get() = _builder.getContainer()
      @JvmName("setContainer")
      set(value) {
        _builder.setContainer(value)
      }
    /**
     * `.Container container = 2;`
     */
    public fun clearContainer() {
      _builder.clearContainer()
    }
    /**
     * `.Container container = 2;`
     * @return Whether the container field is set.
     */
    public fun hasContainer(): kotlin.Boolean {
      return _builder.hasContainer()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.pj.pubsub.proto.NativePubSub.Message.copy(block: `com.pj.pubsub.proto`.MessageKt.Dsl.() -> kotlin.Unit): com.pj.pubsub.proto.NativePubSub.Message =
  `com.pj.pubsub.proto`.MessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.pj.pubsub.proto.NativePubSub.MessageOrBuilder.containerOrNull: com.pj.pubsub.proto.NativePubSub.Container?
  get() = if (hasContainer()) getContainer() else null

